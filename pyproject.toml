[project]
authors = [
    {name = "taikinman", email = "okipedia6161@gmail.com"},
    {name = "Tyaba",     email = "tepei@keio.jp"},
]
requires-python = "<3.13,>=3.10"
dependencies = [
    "matplotlib<4.0.0,>=3.8.0",
    "plotly<6.0.0,>=5.17.0",
    "numpy<3.0.0,>=2.2.0",
    "pandas<3.0.0,>=2.1.1",
    "scipy<2.0.0,>=1.11.3",
    "scikit-learn<2.0.0,>=1.3.2",
    "pydantic<3.0.0,>=2.10.0",
    "griffe<2.0.0,>=1.5.1",
    "loguru<1.0.0,>=0.7.3",
]
name = "langrila"
version = "1.0.0"
description = "Useful tool to build multi-agent in an easy way"
readme = "README.md"
classifiers = []

[tool.ruff]
target-version = "py310"
line-length = 100
indent-width = 4

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "B", # flake8-bugbear
    "I", # isort
]

ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "B024", # abstract class has no abstract methods
]

unfixable = [
    "F401", # module imported but unused
    "F841", # local variable is assigned to but never used,
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
disallow_untyped_calls = false # because this rule is applied to third-party packages as well, it's too strict
disallow_incomplete_defs = true
disallow_untyped_decorators = false # because this rule is applied to third-party packages as well, it's too strict
allow_untyped_globals = false # use Final type instead
allow_redefinition = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_no_return = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unreachable = true
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
pretty = true
strict = true

exclude = "tests"

[project.urls]
homepage = "https://github.com/taikinman/langrila"
repository = "https://github.com/taikinman/langrila"

[project.optional-dependencies]
openai = [
    "openai<2.0.0,>=1.57.4",
    "tiktoken<1.0.0,>=0.8.0",
]
gemini = [
    "google-genai<1.0.0,>=0.3.0",
]
qdrant = [
    "qdrant-client<2.0.0,>=1.9.1",
]
chroma = [
    "chromadb<1.0.0,>=0.5.0",
]
usearch = [
    "usearch<3.0.0,>=2.16.9",
]
cosmos = [
    "azure-cosmos<5.0.0,>=4.7.0",
]
s3 = [
    "boto3<2.0.0,>=1.35.0",
]
claude = [
    "anthropic<1.0.0,>=0.40.0",
]
pdf = [
    "pypdfium2<5.0.0,>=4.30.0",
]
video = [
    "imageio<3.0.0,>=2.34.2",
    "imageio-ffmpeg<1.0.0,>=0.5.1",
]
audio = [
    "soundfile<1.0.0,>=0.12.1",
    "moviepy<2.0.0,>=1.0.3",
]
